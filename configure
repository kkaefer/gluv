#!/usr/bin/env python
import optparse
import os
import pprint
import re
import shlex
import subprocess
import sys

root_dir = os.path.dirname(__file__)

def pkg_config(pkg):
  cmd = subprocess.Popen(['pkg-config', '--static', '--libs-only-l', pkg], stdout=subprocess.PIPE)
  libs, ret = cmd.communicate()
  if (ret): return None

  cmd = subprocess.Popen(['pkg-config', '--static', '--libs-only-L', '--libs-only-other', pkg], stdout=subprocess.PIPE)
  ldflags, ret = cmd.communicate()
  if (ret): return None

  cmd = subprocess.Popen(['pkg-config', '--static', '--cflags', pkg], stdout=subprocess.PIPE)
  cflags, ret = cmd.communicate()
  if (ret): return None

  return (libs, ldflags, cflags)

def fix_frameworks(libs):
  # don't split "-framework Foo"
  return re.split('(?<!-framework)\s+', libs.strip())

def configure_glfw3(o):
  libs, ldflags, cflags = pkg_config('glfw3')
  if not libs:
      sys.stderr.write('could not find glfw3 with pkg-config')
      sys.exit(-1)
  o['variables']['glfw3_libs'] = fix_frameworks(libs)
  o['variables']['glfw3_ldflags'] = fix_frameworks(ldflags)
  o['variables']['glfw3_cflags'] = cflags.split()

def configure_uv(o):
  libs, ldflags, cflags = pkg_config('libuv')
  if not libs:
      sys.stderr.write('could not find uv with pkg-config')
      sys.exit(-1)
  o['variables']['uv_libs'] = fix_frameworks(libs)
  o['variables']['uv_ldflags'] = fix_frameworks(ldflags)
  o['variables']['uv_cflags'] = cflags.split()

def write(filename, data):
  filename = os.path.join(root_dir, filename)
  print "creating ", filename
  f = open(filename, 'w+')
  f.write(data)

output = {
  'variables': {},
}

if __name__ == '__main__':
  configure_glfw3(output)
  configure_uv(output)
  pprint.pprint(output, indent=2)

  write('config.gypi', "# Do not edit. Generated by the configure script.\n" +
    pprint.pformat(output, indent=2) + "\n")
